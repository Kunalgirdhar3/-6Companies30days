class Solution {
    public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {
        int[][] arr = new int[n][2];
        for(int i=0;i<n;i++) arr[i]=new int[] {efficiency[i],speed[i]};
        Arrays.sort(arr,(a,b)-> Integer.compare(b[0],a[0]));
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        long tspeed=0,ans=0;
        for(int[] p:arr){
            int s=p[1];
            pq.add(s);
            if(pq.size()<=k) tspeed+=s;
            else tspeed+=s-pq.poll();
            ans=Math.max(ans,tspeed*p[0]);
        }
        return (int)(ans%1000000007);
    }
}