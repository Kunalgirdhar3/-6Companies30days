/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 
class Solution {
    public int findInMountainArray(int target, MountainArray nums) {
        int p = peak(nums);
        int first = OrderBinarySearch(nums,target,0,p);
        if(first!=-1) return first;
        return OrderBinarySearch(nums,target,p+1,nums.length()-1);
    }
    int peak(MountainArray nums){
        int s=0;
        int e=nums.length()-1;
        while(s<e){
            int mid=s+(e-s)/2;
            if(nums.get(mid)>nums.get(mid+1)) e=mid;
            else s=mid+1;
            
        }
        return s;
    }
    int OrderBinarySearch(MountainArray nums, int target, int s, int e){
        boolean isAsc = nums.get(s)<nums.get(e);
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums.get(mid)==target) return mid;
            if(isAsc){
                if(target<nums.get(mid)) e=mid-1;
                else s=mid+1;
            }
            else{
                if(target>nums.get(mid)) e=mid-1;
                else s=mid+1;
            }
        }
        return -1;
    }
}