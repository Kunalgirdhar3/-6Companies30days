
//User function Template for Java

class Solution
{

	public int minDifference(int arr[], int n) 
	{ 
	    // Your code goes here
	    int sum=0;
	    for(int a : arr) sum+=a;
	   // return findMin(arr,n,0,sum);
	   boolean[][] dp = new boolean[n+1][sum+1];
	   for(int i=0;i<=n;i++) dp[i][0]=true;
	   for(int i=1;i<=sum;i++) dp[0][i]=false;
	   for(int i=1;i<=n;i++){
	       for(int j=1;j<=sum;j++){
	           dp[i][j]=dp[i-1][j];
	           if(arr[i-1]<=j) dp[i][j] |= dp[i-1][j-arr[i-1]];
	       }
	   }
	   int d=Integer.MAX_VALUE;
	   for(int j=sum/2;j>=0;j--){
	       if(dp[n][j]){
	           d=sum-2*j;
	           break;
	       }
	   }
	   return d;
	} 
// 	public int findMin(int[] arr, int n, int curr, int sum){
// 	    if(n==0) return Math.abs((sum-curr)-curr);
// 	    return Math.min(findMin(arr,n-1,curr,sum),findMin(arr,n-1,curr+arr[n-1],sum));
// 	}
}